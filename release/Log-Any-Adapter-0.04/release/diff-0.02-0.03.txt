diff -ur Log-Any-Adapter-0.02/Changes Log-Any-Adapter-0.03/Changes
--- Log-Any-Adapter-0.02/Changes	2009-10-27 21:57:45.000000000 -0700
+++ Log-Any-Adapter-0.03/Changes	2010-01-05 13:29:10.000000000 -0800
@@ -1,7 +1,11 @@
-Revision history for Log-Any
+Revision history for Log-Any-Adapter
 
 ** denotes an incompatible change
 
+0.03  Jan 5, 2010
+
+- depend on Log::Any::Adapter::Core in Log-Any distribution
+
 0.02  Oct 27, 2009
 
 - Fix when loggers created before Log::Any::Adapter initialized
diff -ur Log-Any-Adapter-0.02/META.yml Log-Any-Adapter-0.03/META.yml
--- Log-Any-Adapter-0.02/META.yml	2009-10-27 21:57:55.000000000 -0700
+++ Log-Any-Adapter-0.03/META.yml	2010-01-05 13:30:23.000000000 -0800
@@ -20,9 +20,9 @@
     - t
 requires:
   Carp: 0
-  Log::Any: 0.05
+  Log::Any: 0.10
   Scope::Guard: 0
   perl: 5.6.0
 resources:
   license: http://dev.perl.org/licenses/
-version: 0.02
+version: 0.03
diff -ur Log-Any-Adapter-0.02/Makefile.PL Log-Any-Adapter-0.03/Makefile.PL
--- Log-Any-Adapter-0.02/Makefile.PL	2009-10-24 16:36:24.000000000 -0700
+++ Log-Any-Adapter-0.03/Makefile.PL	2010-01-05 13:29:45.000000000 -0800
@@ -10,7 +10,7 @@
 build_requires 'Test::More' => 0;
 
 requires 'Carp' => 0;
-requires 'Log::Any' => 0.05;
+requires 'Log::Any' => '0.10';
 requires 'Scope::Guard' => 0;
 
 license 'perl';
diff -ur Log-Any-Adapter-0.02/lib/Log/Any/Adapter/Base.pm Log-Any-Adapter-0.03/lib/Log/Any/Adapter/Base.pm
--- Log-Any-Adapter-0.02/lib/Log/Any/Adapter/Base.pm	2009-10-27 05:20:35.000000000 -0700
+++ Log-Any-Adapter-0.03/lib/Log/Any/Adapter/Base.pm	2010-01-05 13:28:16.000000000 -0800
@@ -1,8 +1,9 @@
 package Log::Any::Adapter::Base;
 use Log::Any;
-use Log::Any::Adapter::Util qw(make_method dump_one_line);
+use Log::Any::Adapter::Util qw(make_method);
 use strict;
 use warnings;
+use base qw(Log::Any::Adapter::Core);    # In Log-Any distribution
 
 sub new {
     my $class = shift;
@@ -22,32 +23,6 @@
         $class );
 }
 
-# Forward 'warn' to 'warning', 'is_warn' to 'is_warning', and so on for all aliases
-#
-my %aliases = Log::Any->log_level_aliases;
-while ( my ( $alias, $realname ) = each(%aliases) ) {
-    make_method( $alias, sub { my $self = shift; $self->$realname(@_) } );
-    my $is_alias    = "is_$alias";
-    my $is_realname = "is_$realname";
-    make_method( $is_alias, sub { my $self = shift; $self->$is_realname(@_) } );
-}
-
-# Add printf-style versions of all logging methods and aliases - e.g. errorf, debugf
-#
-foreach my $name ( Log::Any->logging_methods, keys(%aliases) ) {
-    my $methodf = $name . "f";
-    my $method = $aliases{$name} || $name;
-    make_method(
-        $methodf,
-        sub {
-            my ( $self, $format, @params ) = @_;
-            my @new_params = map { ref($_) ? dump_one_line($_) : $_ } @params;
-            my $new_message = sprintf( $format, @new_params );
-            $self->$method($new_message);
-        }
-    );
-}
-
 1;
 
 __END__
diff -ur Log-Any-Adapter-0.02/lib/Log/Any/Adapter.pm Log-Any-Adapter-0.03/lib/Log/Any/Adapter.pm
--- Log-Any-Adapter-0.02/lib/Log/Any/Adapter.pm	2009-10-27 15:27:17.000000000 -0700
+++ Log-Any-Adapter-0.03/lib/Log/Any/Adapter.pm	2009-10-27 22:03:35.000000000 -0700
@@ -6,7 +6,7 @@
 use strict;
 use warnings;
 
-our $VERSION = '0.02';
+our $VERSION = '0.03';
 
 # Checked by Log::Any to see if get_logger should be forwarded here
 #
